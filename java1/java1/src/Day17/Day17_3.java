package Day17;

public class Day17_3 {

	public static void main(String[] args) {

		// 코스 클래스 제네릭에 사람클래스 넣기
		코스<사람> 사람코스 = new 코스<>("일반인과정", 5);
			사람코스.add(new 사람("일반인"));
			사람코스.add(new 직장인("직장인")); // o : 사람 클래스에게 상속 받았기 때문에 가능
			사람코스.add(new 학생("학생")); // o : 사람 클래스에세 상속 받았기 때문에 가능
			사람코스.add(new 고등학생("고등학생")); // o : 학생 클래스에세 상속 -> 사람클래스 상속 받았기 때문에 가능
		// * 제네릭에 들어가는 클래스는 자식 클래스도 같이 들어갈 수 있다.
		코스<직장인> 직장인코스 = new 코스<>("직상인과정", 5);
			// 직장인코스.add(new 사람("일반인")); // x : 부모 클래스는 들어갈 수 없다.
			직장인코스.add(new 직장인("직장인")); // o : 본인은 가능
			//직장인코스.add(new 학생("학생")); // x :  부모 클래스는 같지만 학생 -> 직장인 변환 불가능
			// 직장인코스.add(new 고등학생<>("고등학생")); // x : 고등학생 -> 직장인 변환 불가능
		코스<학생> 학생코스 = new 코스<>("학생", 5);
			// 학생코스.add(new 일반인("일반인")); // x
			// 학생코스.add(new 직장인("직장인")); // x
			학생코스.add(new 학생("학생"));
			학생코스.add(new 고등학생("고등학생")); // o : 학생 클래스에게 상속 받았기 때문에 가능
		코스<고등학생> 고등학생코스 = new 코스<>("고등학생과정", 5);
//			고등학생코스.add(new 일반인("일반인")); // x
//			고등학생코스.add(new 직장인("직장인")); // x
//			고등학생코스.add(new 학생("학생")); // x
			고등학생코스.add(new 고등학생("고등학생")); // o
//		코스<직장인>
//		코스<학생>
//		코스<고등학생>
			// 메소드 호출
			코스명단출력(사람코스);
			코스명단출력(직장인코스);
			코스명단출력(학생코스);
			코스명단출력(고등학생코스);
			// 메소드 호출
			학생코스명단출력(사람코스);
			학생코스명단출력(직장인코스);
			

	}

}
