package 과제.틱택토;

import java.util.Random;
import java.util.Scanner;

public class 틱택토1 {

	/*
	 * 삼목 게임 [ 틱택토 게임 ]
			1. 게임판 9칸 생성
				1. String[] 배열 = new String[9]
		
			2. 사용자에게 0~8 인덱스번호 입력받기
				1. 해당 인덱스에 O 표시
				2. 이미 둔 자리는 재 입력 
		
			3. 컴퓨터는 0~8 사이 난수 발생 
				1. 해당 인덱스에 X 표시
				2. 이미 둔 자리는 재 난수 생성  
		
			4. 승리판단 
				가로 인덱스들의 모양이 모두 동일하면
				012 345 678
					첫번째 인덱스가 0부터 6까지 3씩증가
						두번째 : 첫번째+1
 						세번째 : 첫번째+2
				세로 인덱스들의 모양이 모두 동일하면 
				036 147 258
					첫번째 인덱스가 0부터 2까지 1씩증가 
						두번째 : 첫번째+3
						세번째 : 첫번째+6
				대각선 인덱스들의 모양이 모두 동일하면 
				048 246
	 */
	
	public static void main(String[] args) { // main메소드
		Scanner scanner = new Scanner(System.in); // 입력객체
		String[] 게임판 = {"[ ]", "[ ]", "[ ]", // 게임판 문자(String) 배열
						"[ ]", "[ ]", "[ ]",
						"[ ]", "[ ]", "[ ]" };
		String 승리알 = ""; // 승리 변수 선언
		while(true) { // while문을 통해서 사용자가 입력값을 줄 때마다 반복적으로 사용? 할 수 있게 해준다.
			
			for(int i=0; i<게임판.length; i++) { // for문을 이용하여 아래 코드를 반복적으로 실행하게 해준다.
				System.out.print(게임판[i]); // 게임판의 배열 변수를 호출한다.
				if(i % 3 == 2) System.out.println(); // i의 값을 3으로 나누었을 때 나머지가 2일 경우 줄을 변경해 준다.
			}
			while(true) { // 상위에 있는 while문이 끝났다면 여기로 내려와서 코드를 실행한다.
				System.out.print("위치 : "); int 위치 = scanner.nextInt(); // 스캐너 객체를 사용하여 위치 변수로 입력값으로 받는다.
				if(게임판[위치].equals("[ ]")) { // 사용자에게 입력받은 값과 게임판의 배열변수에 담겨있는 배열길이의 값이 같다면
					게임판[위치] = "[o]"; // 입력받은 값을 배열 길이만큼 이동하여 "[o]"값을 해당 배열 길이에 넣어준다.
					break; // 위 조건이 맞다면 break 를 통해서 와일문을 빠져나간다.
				}else { // 그렇지 않다면 중복된 자리입니다.를 출력 하고 다시 위에 있는 while문으로 돌아가서 다시 입력값을 받도록 한다.
					System.out.println("중복된 자리 입니다.");
				}
			}
			while(true) { // while문을 통해서 아래 코드를 반복하게 해준다.
				Random random = new Random(); // 컴퓨터가 사용할 랜덤 객체를 생성한다.
				int 컴퓨터 = random.nextInt(9); // 랜덤 객체에 컴퓨터라는 변수를 만들어주고 난수9를 입력한다.
				if(게임판[컴퓨터].equals("[ ]")) { // 컴퓨터는 난수를 통해서 게임판에 있는 배열 길이에 무작위로 들어간다.
					게임판[컴퓨터] = "[x]";
					break;
				}
			}
			for(int i=0; i<6; i+=3) { // 가로 승리 조건이다. 조건문을 사용하여 i(0)가 i(0)+1 과 같고 i+1 과 i+2가 같다면, 다시말해서 0 1 2가 같다면 승리이다. i+=3은 for문이 한 바퀴 돌았을때 바로 +3을 하여서 3 4 5 가 같은지를 확인 할 수 있게 된다. 
				if(게임판[i].equals(게임판[i+1]) && 게임판[i+1].equals(게임판[i+2])) {
					승리알 = 게임판[i]; // 조건이 맞다면 게임판[i]를 승리알 변수에 넣어준다.
				}
			}
			for(int i=0; i<2; i++) { // 위 가로 승리 조건과 동일한 원리이다.
				if(게임판[i].equals(게임판[i+3]) && 게임판[i+3].equals(게임판[i+6])) {
					승리알 = 게임판[i]; // 조건이 맞다면 게임판[i]를 승리알 변수에 넣어준다.
				}
			} 
			if(게임판[0].equals(게임판[4]) && 게임판[4].equals(게임판[8])) { // 이번에 for문을 쓰지 않은 이유는 번호가 일정하지 않아서? 이다. 글로 설명하기 어렵다.
				승리알 = 게임판[0]; // 조건이 맞다면 게임판[0]를 승리알 변수에 넣어준다.
			}
			if(게임판[2].equals(게임판[4]) && 게임판[4].equals(게임판[6])) { // 이번에 for문을 쓰지 않은 이유는 번호가 일정하지 않아서? 이다. 글로 설명하기 어렵다.
				승리알 = 게임판[2]; // 조건이 맞다면 게임판[2]를 승리알 변수에 넣어준다.
			}
			if(승리알.equals("[o]")) { // 승리알의 변수에 값과 "[o]"값이 같다면 플레이어 승리를 출력한다.
				System.out.println("플레이어 승리");
				break;
			}
			if(승리알.equals("[x]")) { // 승리알의 변수에 값과 "[x]"값이 같다면 컴퓨터 승리를 출력한다.
				System.out.println("컴퓨터 승리");
				break;
			}
		}
		
	}
	
}
